import SelectPicker from "@/components/modules/selectpicker";
import { useSchoolRegistration } from "@/lib/mutations";
import { useGetCourse } from "@/lib/queries";
import { useFormik } from "formik";
import Head from "next/head";
import { useRouter } from "next/router";
import { useState } from "react";

const LC = "e7fd210a-43a2-4bb4-8dea-998854904270";
const SDL1 = [
  "4143e214-412b-4132-8cfd-4d9c02680c6a",
  "a9a4e463-e06f-41ef-bc7f-397f6c4b95d5",
];
const SDL2 = [
  "a34e2674-ebf5-4914-a523-1f058a75e14c",
  "acceaa08-672f-4358-8e78-6af4d9408fde",
];
const SDL3 = "80d556eb-8426-496e-afc4-872cafe33eb7";

export default function Apply() {
  const router = useRouter();
  const { course_id } = router.query;

  const formik = useFormik({
    initialValues: {
      first_name: "",
      middle_name: "",
      last_name: "",
      contact_number: "",
      cell_leader_name: "",
      network_leader_name: "",
      lesson_completed: "",
      ojt: "",
      with_cellgroup: false,
      want_to_be_admin_or_teacher: false,
      role: "",
    },
    onSubmit: () => {},
  });

  const { data: course } = useGetCourse(course_id as string);
  const { mutate, isLoading } = useSchoolRegistration();

  const handleSubmit = (e: any) => {
    e?.preventDefault();

    if (!formik.values.ojt) {
      if (course?.id !== LC) {
        return document.getElementById("ojt-input")?.focus();
      }
    }

    mutate(
      {
        course_id: course_id as string,
        ...formik.values,
      },
      {
        onSuccess(data) {
          router.push(`/sdl/admission/${course_id}/${data.id}`);
        },
      }
    );
  };

  const [showOjtPicker, setShowOjtPicker] = useState(false);
  const [showRolePicker, setShowRolePicker] = useState(false);

  return (
    <>
      <SelectPicker
        label="On the Job Training(OJT)"
        isVisible={showOjtPicker}
        value={formik.values.ojt}
        onConfirm={(value) => {
          formik.setFieldValue("ojt", value);
        }}
        onClose={() => setShowOjtPicker(false)}
      >
        <option value="Music">Music</option>
        <option value="Media">Media</option>
        <option value="Usher">Usher</option>
        <option value="Dance">Dance</option>
        <option value="IT">IT</option>
        <option value="MC">MC</option>
        <option value="Marshall">Marshall</option>
        <option value="Art">Art</option>
      </SelectPicker>
      <SelectPicker
        label="Role"
        isVisible={showRolePicker}
        value={formik.values.role}
        onConfirm={(value) => {
          formik.setFieldValue("role", value);
        }}
        onClose={() => setShowRolePicker(false)}
      >
        <option value="Admin">Admin</option>
        <option value="Teacher">Teacher</option>
      </SelectPicker>
      <Head>
        <title>Disciplr</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <form onSubmit={handleSubmit}>
        <main className="flex flex-col p-7">
          <header className="shrink-0 text-primary font-bold text-2xl flex flex-col gap-4 mb-12">
            School of Leaders
          </header>
          <div className="mb-7 text-xl text-[#686777]">
            Registration form for {course?.title}
          </div>
          <div className="flex flex-col gap-4">
            <div>
              <label className="text-[12px] text-[#686777] font-medium uppercase mb-1">
                First name
              </label>
              <input
                onChange={formik.handleChange}
                value={formik.values.first_name}
                name="first_name"
                className="bg-[#F9F9F9] p-4 rounded-xl w-full outline-0"
                required
                placeholder="Juan"
              />
            </div>
            <div>
              <label className="text-[12px] text-[#686777] font-medium uppercase mb-1">
                Middle name
              </label>
              <input
                onChange={formik.handleChange}
                value={formik.values.middle_name}
                name="middle_name"
                required
                placeholder="Dela"
                className="bg-[#F9F9F9] p-4 rounded-xl w-full outline-0"
              />
            </div>

            <div>
              <label className="text-[12px] text-[#686777] font-medium uppercase mb-1">
                Last name
              </label>
              <input
                onChange={formik.handleChange}
                value={formik.values.last_name}
                name="last_name"
                className="bg-[#F9F9F9] p-4 rounded-xl w-full outline-0"
                required
                placeholder="Cruz"
              />
            </div>

            <div>
              <label className="text-[12px] text-[#686777] font-medium uppercase mb-1">
                Contact Number
              </label>
              <input
                onChange={formik.handleChange}
                value={formik.values.contact_number}
                name="contact_number"
                className="bg-[#F9F9F9] p-4 rounded-xl w-full outline-0"
                required
                placeholder="09XXXXXXXXX"
                maxLength={11}
              />
            </div>

            <div>
              <label className="text-[12px] text-[#686777] font-medium uppercase mb-1">
                Cell Leader
              </label>
              <input
                onChange={formik.handleChange}
                value={formik.values.cell_leader_name}
                name="cell_leader_name"
                className="bg-[#F9F9F9] p-4 rounded-xl w-full outline-0"
                required
                placeholder="John Dela Cruz"
              />
            </div>

            <div>
              <label className="text-[12px] text-[#686777] font-medium uppercase mb-1">
                Network Leader
              </label>
              <input
                onChange={formik.handleChange}
                value={formik.values.network_leader_name}
                name="network_leader_name"
                className="bg-[#F9F9F9] p-4 rounded-xl w-full outline-0"
                required
                placeholder="Pedro Cruz"
              />
            </div>

            {course_id === LC && (
              <div>
                <label className="text-[12px] text-[#686777] font-medium uppercase mb-1">
                  Consolidation Lesson Completed
                </label>
                <input
                  onChange={formik.handleChange}
                  value={formik.values.lesson_completed}
                  name="lesson_completed"
                  className="bg-[#F9F9F9] p-4 rounded-xl w-full outline-0"
                  required
                  placeholder="Lesson X"
                />
              </div>
            )}

            {course_id !== LC && (
              <>
                <div>
                  <label className="text-[12px] text-[#686777] font-medium uppercase mb-1">
                    On the Job Training (OJT)
                  </label>
                  <input
                    required
                    readOnly
                    name="ojt"
                    id="ojt-input"
                    onClick={() => setShowOjtPicker(true)}
                    onFocus={() => setShowOjtPicker(true)}
                    value={formik.values.ojt}
                    placeholder="Choose a ministry"
                    className="bg-[#F9F9F9] p-4 rounded-xl w-full outline-0"
                  />
                </div>

                <div>
                  <label className="text-[12px] text-[#686777] font-medium uppercase mb-1">
                    Do you have cellgroup?
                  </label>
                  <input
                    className="ml-2"
                    type="checkbox"
                    onChange={() => {
                      formik.setFieldValue(
                        "with_cellgroup",
                        !formik.values.with_cellgroup
                      );
                    }}
                    checked={formik.values.with_cellgroup}
                    name="with_cellgroup"
                  />
                </div>

                {[...SDL2, SDL3].includes(String(course_id)) && (
                  <>
                    <div>
                      <label className="text-[12px] text-[#686777] font-medium uppercase mb-1">
                        Do you want to be an Admin or a Teacher?
                      </label>
                      <input
                        className="ml-2"
                        type="checkbox"
                        onChange={(e) => {
                          formik.setFieldValue(
                            "want_to_be_admin_or_teacher",
                            !formik.values.want_to_be_admin_or_teacher
                          );
                        }}
                        checked={formik.values.want_to_be_admin_or_teacher}
                        name="want_to_be_admin_or_teacher"
                      />
                    </div>

                    {formik.values.want_to_be_admin_or_teacher && (
                      <div>
                        <label className="text-[12px] text-[#686777] font-medium uppercase mb-1">
                          Role
                        </label>
                        <input
                          required
                          readOnly
                          name="role"
                          onClick={() => setShowRolePicker(true)}
                          onFocus={() => setShowRolePicker(true)}
                          value={formik.values.role}
                          placeholder="Choose a role"
                          className="bg-[#F9F9F9] p-4 rounded-xl w-full outline-0"
                        />
                      </div>
                    )}
                  </>
                )}
              </>
            )}

            <p className="text-[12px] text-[#686777] text-center px-12 mt-14">
              The enrollment fee for this class is {course?.fee ?? "0.00"}{" "}
              pesos. This fee is used to cover the cost of providing quality
              education and ensuring that the necessary resources are available
              to students.
            </p>

            <button
              type="submit"
              disabled={isLoading}
              className="bg-[#6E7AC5] text-white p-4 rounded-lg disabled:opacity-50 disabled"
            >
              Submit
            </button>
          </div>
        </main>
      </form>
    </>
  );
}
