import Header from "@/components/base/header";
import Layout from "@/components/templates/layout";
import Head from "next/head";
import NetworkCard from "@/components/modules/network-card";
import { useGetNetworksByDiscipler, useGetProfile } from "@/lib/queries";
import moment from "moment";
import Body from "@/components/base/body";
import { Skeleton } from "@mui/material";
import { generateNumberBetween } from "@/lib/utils";
import { useEffect, useState } from "react";

const Networks = () => {
  const { data: profile } = useGetProfile();
  const { data: networks, isLoading: gettingNetworks } =
    useGetNetworksByDiscipler(profile?.id ?? "");

  return (
    <>
      <Head>
        <title>Disciplr</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <Layout activeRoute="networks">
        <Header>
          <div className="flex w-full justify-between items-center">
            <span>Networks</span>
          </div>
        </Header>
        <Body>
          {gettingNetworks && (
            <div className="flex flex-col gap-7 p-7">
              <Preloader />
            </div>
          )}
          <div className="p-7 flex flex-col gap-7">
            {networks
              ?.sort((network) => (network.status === "Active" ? -1 : 1))
              .map((network) => {
                return (
                  <NetworkCard
                    id={network.id}
                    key={network.id}
                    alias={network.name}
                    created_at={moment(network.created_at).format(
                      "MMM DD, YYYY"
                    )}
                    member_count={network.member_count ?? 0}
                    status={network.status}
                  />
                );
              })}
          </div>
        </Body>
      </Layout>
    </>
  );
};

export default Networks;

function Preloader() {
  const [units, setUnits] = useState<number>(1);
  const [randomWidth, setRandomWidth] = useState<number[]>();

  useEffect(() => {
    const count = generateNumberBetween(1, 3);
    const tuples = new Array(count)
      .fill(0)
      .map((_) => generateNumberBetween(80, 140));

    setRandomWidth(tuples);
    setUnits(count);
  }, []);

  if (!!units) {
    return (
      <div className="gap flex flex-col gap-7">
        {randomWidth?.map((width, index) => (
          <div
            key={index}
            className="h-[117px] w-full bg-gray-50 rounded-3xl px-7 py-5"
          >
            <div className="flex gap-4 items-center">
              <div className="shrink-0">
                <Skeleton width={77} height={77} variant="circular" />
              </div>
              <div className="grow">
                <Skeleton width={width} height={21} />
                <Skeleton width={width} height={14} />
              </div>
            </div>
          </div>
        ))}
      </div>
    );
  }

  return null;
}
