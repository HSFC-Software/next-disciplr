import Layout from "@/components/templates/page";
import { useGetCourses, useGetMasterList } from "@/lib/queries";
import { supabase } from "@/lib/supabase";
import moment from "moment";
import Head from "next/head";
import { useEffect, useState } from "react";
import { useQueryClient } from "react-query";

export default function Accounting() {
  const queryClient = useQueryClient();
  const [q, setQ] = useState("");

  const { data: courses } = useGetCourses();
  const { data: applications } = useGetMasterList();

  useEffect(() => {
    supabase
      .channel("table-db-changes")
      .on(
        "postgres_changes",
        { event: "INSERT", schema: "public", table: "school_registrations" },
        () => {
          queryClient.invalidateQueries(["getMasterList"]);
        }
      )
      .subscribe();
  }, []);

  return (
    <>
      <Head>
        <title>Disciplr</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <Layout activeRoute="" isNavigationHidden>
        <main className="flex flex-col p-7 gap-3">
          <h1 className="text-4xl font-semibold">Master List</h1>
          <div>
            <label className="text-[12px] text-[#686777] font-medium uppercase mb-1">
              Search
            </label>
            <input
              value={q}
              onChange={(e) => setQ(e.target.value)}
              name="search"
              className="bg-[#F9F9F9] p-4 rounded-xl w-full outline-0 border-0"
              placeholder="Search Name"
            />
          </div>
          {(applications as any)
            ?.filter((item: any) => {
              const keywords = q.trim().split(" ");

              return keywords.every((keyword) => {
                return (
                  item?.first_name
                    ?.toLowerCase()
                    .includes(keyword.toLowerCase()) ||
                  item?.middle_name
                    ?.toLowerCase()
                    .includes(keyword.toLowerCase()) ||
                  item?.last_name?.toLowerCase().includes(keyword.toLowerCase())
                );
              });
            })
            ?.map((application: any) => {
              const course = courses?.find(
                (item) => item.id === application?.course_id
              );

              return (
                <div
                  key={application?.id}
                  className="bg-[#F9F9F9] rounded-2xl p-5"
                >
                  <div className="grid grid-cols-4 gap-4">
                    <div className="col-span-1 ">
                      <div>
                        Name: {application?.first_name}{" "}
                        {application?.middle_name} {application?.last_name}
                      </div>
                      <div>Course: {course?.title}</div>
                      <div>
                        Date Enrolled:{" "}
                        {moment(application?.created_at).format("lll")}
                      </div>
                    </div>
                    <div className="col-span-1 ">
                      <div>Leader: {application?.cell_leader_name}</div>
                      <div>
                        Network Leader: {application?.network_leader_name}
                      </div>
                      <div>
                        Birthday:{" "}
                        {application?.birthday ? (
                          <>
                            {moment(application?.birthday).format(
                              "MMMM DD, YYYY"
                            )}
                          </>
                        ) : (
                          "-"
                        )}
                      </div>
                    </div>
                    <div className="col-span-1 ">
                      <div>
                        Consolidation Level: {application?.lesson_completed}
                      </div>
                      <div>OJT: {application?.ojt || "-"}</div>
                      <div>
                        Enrollment Status:{" "}
                        <span className="font-bold">{application?.status}</span>
                      </div>
                    </div>
                    <div className="col-span-1 ">
                      <div>
                        Do have cellgroup:{" "}
                        {application?.with_cellgroup ? "✅" : "❌"}
                      </div>
                      <div>
                        Want to be Admin or Teacher:{" "}
                        {application?.want_to_be_admin_or_teacher ? "✅" : "❌"}
                      </div>
                      <div>Role: {application?.role || "-"}</div>
                    </div>
                  </div>
                </div>
              );
            })}
        </main>
      </Layout>
    </>
  );
}
